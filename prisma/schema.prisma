generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model bookmarks {
  id       String    @id @db.Uuid
  user_id  String?   @db.Uuid
  tweet_id String?   @db.Uuid
  tweets   tweets?   @relation(fields: [tweet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  profiles profiles? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, tweet_id], map: "bookmark_unique")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model hashtags {
  id            String          @id @db.Uuid
  name          String
  tweet_hashtag tweet_hashtag[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model likes {
  id         String   @id @db.Uuid
  user_id    String   @db.Uuid
  tweet_id   String   @db.Uuid
  created_at DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  u_name     String
  tweets     tweets   @relation(fields: [tweet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  profiles   profiles @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, tweet_id], map: "like_unique")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model profiles {
  id         String      @id @db.Uuid
  updated_at DateTime    @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  username   String      @unique
  full_name  String?
  bookmarks  bookmarks[]
  likes      likes[]
  replies    replies[]
  tweets     tweets[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model replies {
  id            String    @id @db.Uuid
  text          String
  user_id       String    @db.Uuid
  tweet_id      String?   @db.Uuid
  reply_id      String?   @db.Uuid
  username      String?
  time          DateTime? @default(now()) @db.Timestamptz(6)
  replies       replies?  @relation("repliesToreplies", fields: [reply_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  other_replies replies[] @relation("repliesToreplies")
  tweets        tweets?   @relation(fields: [tweet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  profiles      profiles  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model tweet_hashtag {
  tweet_id   String   @db.Uuid
  hashtag_id String   @db.Uuid
  hashtags   hashtags @relation(fields: [hashtag_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  tweets     tweets   @relation(fields: [tweet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([tweet_id, hashtag_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model tweets {
  id            String          @id @db.Uuid
  text          String
  profile_id    String?         @db.Uuid
  created_at    DateTime?       @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  updated_at    DateTime        @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  created_by    String?
  bookmarks     bookmarks[]
  likes         likes[]
  replies       replies[]
  tweet_hashtag tweet_hashtag[]
  profiles      profiles?       @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
